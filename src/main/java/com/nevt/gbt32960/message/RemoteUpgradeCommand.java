// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gbt3260.proto

package com.nevt.gbt32960.message;

/**
 * <pre>
 *远程升级命令
 * </pre>
 *
 * Protobuf type {@code RemoteUpgradeCommand}
 */
public  final class RemoteUpgradeCommand extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:RemoteUpgradeCommand)
        RemoteUpgradeCommandOrBuilder {
  // Use RemoteUpgradeCommand.newBuilder() to construct.
  private RemoteUpgradeCommand(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private RemoteUpgradeCommand() {
    requestTime_ = 0L;
    dialName_ = "";
    dialAccount_ = "";
    dialPassword_ = "";
    address_ = "";
    port_ = 0;
    terminalManufacturerId_ = "";
    hardwareVersion_ = "";
    firmwareVersion_ = "";
    upgradeUrl_ = "";
    upgradeTimeLimit_ = 0;
  }

  @Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return com.google.protobuf.UnknownFieldSet.getDefaultInstance();
  }
  private RemoteUpgradeCommand(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    int mutable_bitField0_ = 0;
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!input.skipField(tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            String s = input.readStringRequireUtf8();

            dialName_ = s;
            break;
          }
          case 18: {
            String s = input.readStringRequireUtf8();

            dialAccount_ = s;
            break;
          }
          case 26: {
            String s = input.readStringRequireUtf8();

            dialPassword_ = s;
            break;
          }
          case 34: {
            String s = input.readStringRequireUtf8();

            address_ = s;
            break;
          }
          case 40: {

            port_ = input.readInt32();
            break;
          }
          case 50: {
            String s = input.readStringRequireUtf8();

            terminalManufacturerId_ = s;
            break;
          }
          case 58: {
            String s = input.readStringRequireUtf8();

            hardwareVersion_ = s;
            break;
          }
          case 66: {
            String s = input.readStringRequireUtf8();

            firmwareVersion_ = s;
            break;
          }
          case 74: {
            String s = input.readStringRequireUtf8();

            upgradeUrl_ = s;
            break;
          }
          case 80: {

            upgradeTimeLimit_ = input.readInt32();
            break;
          }
          case 88: {

            requestTime_ = input.readInt64();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return Gbt3260.internal_static_com_ime_iov_gbt32960_RemoteUpgradeCommand_descriptor;
  }

  protected FieldAccessorTable
      internalGetFieldAccessorTable() {
    return Gbt3260.internal_static_com_ime_iov_gbt32960_RemoteUpgradeCommand_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            RemoteUpgradeCommand.class, Builder.class);
  }

  public static final int REQUEST_TIME_FIELD_NUMBER = 11;
  private long requestTime_;
  /**
   * <code>optional int64 request_time = 11;</code>
   */
  public long getRequestTime() {
    return requestTime_;
  }

  public static final int DIAL_NAME_FIELD_NUMBER = 1;
  private volatile Object dialName_;
  /**
   * <pre>
   *拨号点名称
   * </pre>
   *
   * <code>optional string dial_name = 1;</code>
   */
  public String getDialName() {
    Object ref = dialName_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      dialName_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *拨号点名称
   * </pre>
   *
   * <code>optional string dial_name = 1;</code>
   */
  public com.google.protobuf.ByteString
      getDialNameBytes() {
    Object ref = dialName_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      dialName_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DIAL_ACCOUNT_FIELD_NUMBER = 2;
  private volatile Object dialAccount_;
  /**
   * <pre>
   *拨号用户名
   * </pre>
   *
   * <code>optional string dial_account = 2;</code>
   */
  public String getDialAccount() {
    Object ref = dialAccount_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      dialAccount_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *拨号用户名
   * </pre>
   *
   * <code>optional string dial_account = 2;</code>
   */
  public com.google.protobuf.ByteString
      getDialAccountBytes() {
    Object ref = dialAccount_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      dialAccount_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int DIAL_PASSWORD_FIELD_NUMBER = 3;
  private volatile Object dialPassword_;
  /**
   * <pre>
   *拨号密码
   * </pre>
   *
   * <code>optional string dial_password = 3;</code>
   */
  public String getDialPassword() {
    Object ref = dialPassword_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      dialPassword_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *拨号密码
   * </pre>
   *
   * <code>optional string dial_password = 3;</code>
   */
  public com.google.protobuf.ByteString
      getDialPasswordBytes() {
    Object ref = dialPassword_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      dialPassword_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int ADDRESS_FIELD_NUMBER = 4;
  private volatile Object address_;
  /**
   * <pre>
   *地址
   * </pre>
   *
   * <code>optional string address = 4;</code>
   */
  public String getAddress() {
    Object ref = address_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      address_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *地址
   * </pre>
   *
   * <code>optional string address = 4;</code>
   */
  public com.google.protobuf.ByteString
      getAddressBytes() {
    Object ref = address_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      address_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int PORT_FIELD_NUMBER = 5;
  private int port_;
  /**
   * <pre>
   * </pre>
   *
   * <code>optional int32 port = 5;</code>
   */
  public int getPort() {
    return port_;
  }

  public static final int TERMINAL_MANUFACTURER_ID_FIELD_NUMBER = 6;
  private volatile Object terminalManufacturerId_;
  /**
   * <pre>
   *车载终端制造商ID
   * </pre>
   *
   * <code>optional string terminal_manufacturer_id = 6;</code>
   */
  public String getTerminalManufacturerId() {
    Object ref = terminalManufacturerId_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      terminalManufacturerId_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *车载终端制造商ID
   * </pre>
   *
   * <code>optional string terminal_manufacturer_id = 6;</code>
   */
  public com.google.protobuf.ByteString
      getTerminalManufacturerIdBytes() {
    Object ref = terminalManufacturerId_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      terminalManufacturerId_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int HARDWARE_VERSION_FIELD_NUMBER = 7;
  private volatile Object hardwareVersion_;
  /**
   * <code>optional string hardware_version = 7;</code>
   */
  public String getHardwareVersion() {
    Object ref = hardwareVersion_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      hardwareVersion_ = s;
      return s;
    }
  }
  /**
   * <code>optional string hardware_version = 7;</code>
   */
  public com.google.protobuf.ByteString
      getHardwareVersionBytes() {
    Object ref = hardwareVersion_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      hardwareVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int FIRMWARE_VERSION_FIELD_NUMBER = 8;
  private volatile Object firmwareVersion_;
  /**
   * <pre>
   *固件版本
   * </pre>
   *
   * <code>optional string firmware_version = 8;</code>
   */
  public String getFirmwareVersion() {
    Object ref = firmwareVersion_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      firmwareVersion_ = s;
      return s;
    }
  }
  /**
   * <pre>
   *固件版本
   * </pre>
   *
   * <code>optional string firmware_version = 8;</code>
   */
  public com.google.protobuf.ByteString
      getFirmwareVersionBytes() {
    Object ref = firmwareVersion_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      firmwareVersion_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int UPGRADE_URL_FIELD_NUMBER = 9;
  private volatile Object upgradeUrl_;
  /**
   * <code>optional string upgrade_url = 9;</code>
   */
  public String getUpgradeUrl() {
    Object ref = upgradeUrl_;
    if (ref instanceof String) {
      return (String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      String s = bs.toStringUtf8();
      upgradeUrl_ = s;
      return s;
    }
  }
  /**
   * <code>optional string upgrade_url = 9;</code>
   */
  public com.google.protobuf.ByteString
      getUpgradeUrlBytes() {
    Object ref = upgradeUrl_;
    if (ref instanceof String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (String) ref);
      upgradeUrl_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int UPGRADE_TIME_LIMIT_FIELD_NUMBER = 10;
  private int upgradeTimeLimit_;
  /**
   * <pre>
   *连接到升级服务器时限
   * </pre>
   *
   * <code>optional int32 upgrade_time_limit = 10;</code>
   */
  public int getUpgradeTimeLimit() {
    return upgradeTimeLimit_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (!getDialNameBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, dialName_);
    }
    if (!getDialAccountBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 2, dialAccount_);
    }
    if (!getDialPasswordBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 3, dialPassword_);
    }
    if (!getAddressBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 4, address_);
    }
    if (port_ != 0) {
      output.writeInt32(5, port_);
    }
    if (!getTerminalManufacturerIdBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 6, terminalManufacturerId_);
    }
    if (!getHardwareVersionBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 7, hardwareVersion_);
    }
    if (!getFirmwareVersionBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 8, firmwareVersion_);
    }
    if (!getUpgradeUrlBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 9, upgradeUrl_);
    }
    if (upgradeTimeLimit_ != 0) {
      output.writeInt32(10, upgradeTimeLimit_);
    }
    if (requestTime_ != 0L) {
      output.writeInt64(11, requestTime_);
    }
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (!getDialNameBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, dialName_);
    }
    if (!getDialAccountBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(2, dialAccount_);
    }
    if (!getDialPasswordBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(3, dialPassword_);
    }
    if (!getAddressBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(4, address_);
    }
    if (port_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(5, port_);
    }
    if (!getTerminalManufacturerIdBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(6, terminalManufacturerId_);
    }
    if (!getHardwareVersionBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(7, hardwareVersion_);
    }
    if (!getFirmwareVersionBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(8, firmwareVersion_);
    }
    if (!getUpgradeUrlBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(9, upgradeUrl_);
    }
    if (upgradeTimeLimit_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, upgradeTimeLimit_);
    }
    if (requestTime_ != 0L) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt64Size(11, requestTime_);
    }
    memoizedSize = size;
    return size;
  }

  private static final long serialVersionUID = 0L;
  @Override
  public boolean equals(final Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof RemoteUpgradeCommand)) {
      return super.equals(obj);
    }
    RemoteUpgradeCommand other = (RemoteUpgradeCommand) obj;

    boolean result = true;
    result = result && (getRequestTime()
        == other.getRequestTime());
    result = result && getDialName()
        .equals(other.getDialName());
    result = result && getDialAccount()
        .equals(other.getDialAccount());
    result = result && getDialPassword()
        .equals(other.getDialPassword());
    result = result && getAddress()
        .equals(other.getAddress());
    result = result && (getPort()
        == other.getPort());
    result = result && getTerminalManufacturerId()
        .equals(other.getTerminalManufacturerId());
    result = result && getHardwareVersion()
        .equals(other.getHardwareVersion());
    result = result && getFirmwareVersion()
        .equals(other.getFirmwareVersion());
    result = result && getUpgradeUrl()
        .equals(other.getUpgradeUrl());
    result = result && (getUpgradeTimeLimit()
        == other.getUpgradeTimeLimit());
    return result;
  }

  @Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptorForType().hashCode();
    hash = (37 * hash) + REQUEST_TIME_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
        getRequestTime());
    hash = (37 * hash) + DIAL_NAME_FIELD_NUMBER;
    hash = (53 * hash) + getDialName().hashCode();
    hash = (37 * hash) + DIAL_ACCOUNT_FIELD_NUMBER;
    hash = (53 * hash) + getDialAccount().hashCode();
    hash = (37 * hash) + DIAL_PASSWORD_FIELD_NUMBER;
    hash = (53 * hash) + getDialPassword().hashCode();
    hash = (37 * hash) + ADDRESS_FIELD_NUMBER;
    hash = (53 * hash) + getAddress().hashCode();
    hash = (37 * hash) + PORT_FIELD_NUMBER;
    hash = (53 * hash) + getPort();
    hash = (37 * hash) + TERMINAL_MANUFACTURER_ID_FIELD_NUMBER;
    hash = (53 * hash) + getTerminalManufacturerId().hashCode();
    hash = (37 * hash) + HARDWARE_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getHardwareVersion().hashCode();
    hash = (37 * hash) + FIRMWARE_VERSION_FIELD_NUMBER;
    hash = (53 * hash) + getFirmwareVersion().hashCode();
    hash = (37 * hash) + UPGRADE_URL_FIELD_NUMBER;
    hash = (53 * hash) + getUpgradeUrl().hashCode();
    hash = (37 * hash) + UPGRADE_TIME_LIMIT_FIELD_NUMBER;
    hash = (53 * hash) + getUpgradeTimeLimit();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static RemoteUpgradeCommand parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static RemoteUpgradeCommand parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static RemoteUpgradeCommand parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static RemoteUpgradeCommand parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static RemoteUpgradeCommand parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static RemoteUpgradeCommand parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static RemoteUpgradeCommand parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static RemoteUpgradeCommand parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static RemoteUpgradeCommand parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static RemoteUpgradeCommand parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(RemoteUpgradeCommand prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @Override
  protected Builder newBuilderForType(
      BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   *远程升级命令
   * </pre>
   *
   * Protobuf type {@code RemoteUpgradeCommand}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:RemoteUpgradeCommand)
      RemoteUpgradeCommandOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return Gbt3260.internal_static_com_ime_iov_gbt32960_RemoteUpgradeCommand_descriptor;
    }

    protected FieldAccessorTable
        internalGetFieldAccessorTable() {
      return Gbt3260.internal_static_com_ime_iov_gbt32960_RemoteUpgradeCommand_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              RemoteUpgradeCommand.class, Builder.class);
    }

    // Construct using RemoteUpgradeCommand.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      requestTime_ = 0L;

      dialName_ = "";

      dialAccount_ = "";

      dialPassword_ = "";

      address_ = "";

      port_ = 0;

      terminalManufacturerId_ = "";

      hardwareVersion_ = "";

      firmwareVersion_ = "";

      upgradeUrl_ = "";

      upgradeTimeLimit_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return Gbt3260.internal_static_com_ime_iov_gbt32960_RemoteUpgradeCommand_descriptor;
    }

    public RemoteUpgradeCommand getDefaultInstanceForType() {
      return RemoteUpgradeCommand.getDefaultInstance();
    }

    public RemoteUpgradeCommand build() {
      RemoteUpgradeCommand result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public RemoteUpgradeCommand buildPartial() {
      RemoteUpgradeCommand result = new RemoteUpgradeCommand(this);
      result.requestTime_ = requestTime_;
      result.dialName_ = dialName_;
      result.dialAccount_ = dialAccount_;
      result.dialPassword_ = dialPassword_;
      result.address_ = address_;
      result.port_ = port_;
      result.terminalManufacturerId_ = terminalManufacturerId_;
      result.hardwareVersion_ = hardwareVersion_;
      result.firmwareVersion_ = firmwareVersion_;
      result.upgradeUrl_ = upgradeUrl_;
      result.upgradeTimeLimit_ = upgradeTimeLimit_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof RemoteUpgradeCommand) {
        return mergeFrom((RemoteUpgradeCommand)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(RemoteUpgradeCommand other) {
      if (other == RemoteUpgradeCommand.getDefaultInstance()) return this;
      if (other.getRequestTime() != 0L) {
        setRequestTime(other.getRequestTime());
      }
      if (!other.getDialName().isEmpty()) {
        dialName_ = other.dialName_;
        onChanged();
      }
      if (!other.getDialAccount().isEmpty()) {
        dialAccount_ = other.dialAccount_;
        onChanged();
      }
      if (!other.getDialPassword().isEmpty()) {
        dialPassword_ = other.dialPassword_;
        onChanged();
      }
      if (!other.getAddress().isEmpty()) {
        address_ = other.address_;
        onChanged();
      }
      if (other.getPort() != 0) {
        setPort(other.getPort());
      }
      if (!other.getTerminalManufacturerId().isEmpty()) {
        terminalManufacturerId_ = other.terminalManufacturerId_;
        onChanged();
      }
      if (!other.getHardwareVersion().isEmpty()) {
        hardwareVersion_ = other.hardwareVersion_;
        onChanged();
      }
      if (!other.getFirmwareVersion().isEmpty()) {
        firmwareVersion_ = other.firmwareVersion_;
        onChanged();
      }
      if (!other.getUpgradeUrl().isEmpty()) {
        upgradeUrl_ = other.upgradeUrl_;
        onChanged();
      }
      if (other.getUpgradeTimeLimit() != 0) {
        setUpgradeTimeLimit(other.getUpgradeTimeLimit());
      }
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      RemoteUpgradeCommand parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (RemoteUpgradeCommand) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private long requestTime_ ;
    /**
     * <code>optional int64 request_time = 11;</code>
     */
    public long getRequestTime() {
      return requestTime_;
    }
    /**
     * <code>optional int64 request_time = 11;</code>
     */
    public Builder setRequestTime(long value) {
      
      requestTime_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional int64 request_time = 11;</code>
     */
    public Builder clearRequestTime() {
      
      requestTime_ = 0L;
      onChanged();
      return this;
    }

    private Object dialName_ = "";
    /**
     * <pre>
     *拨号点名称
     * </pre>
     *
     * <code>optional string dial_name = 1;</code>
     */
    public String getDialName() {
      Object ref = dialName_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        dialName_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     *拨号点名称
     * </pre>
     *
     * <code>optional string dial_name = 1;</code>
     */
    public com.google.protobuf.ByteString
        getDialNameBytes() {
      Object ref = dialName_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        dialName_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *拨号点名称
     * </pre>
     *
     * <code>optional string dial_name = 1;</code>
     */
    public Builder setDialName(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      dialName_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *拨号点名称
     * </pre>
     *
     * <code>optional string dial_name = 1;</code>
     */
    public Builder clearDialName() {
      
      dialName_ = getDefaultInstance().getDialName();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *拨号点名称
     * </pre>
     *
     * <code>optional string dial_name = 1;</code>
     */
    public Builder setDialNameBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      dialName_ = value;
      onChanged();
      return this;
    }

    private Object dialAccount_ = "";
    /**
     * <pre>
     *拨号用户名
     * </pre>
     *
     * <code>optional string dial_account = 2;</code>
     */
    public String getDialAccount() {
      Object ref = dialAccount_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        dialAccount_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     *拨号用户名
     * </pre>
     *
     * <code>optional string dial_account = 2;</code>
     */
    public com.google.protobuf.ByteString
        getDialAccountBytes() {
      Object ref = dialAccount_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        dialAccount_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *拨号用户名
     * </pre>
     *
     * <code>optional string dial_account = 2;</code>
     */
    public Builder setDialAccount(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      dialAccount_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *拨号用户名
     * </pre>
     *
     * <code>optional string dial_account = 2;</code>
     */
    public Builder clearDialAccount() {
      
      dialAccount_ = getDefaultInstance().getDialAccount();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *拨号用户名
     * </pre>
     *
     * <code>optional string dial_account = 2;</code>
     */
    public Builder setDialAccountBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      dialAccount_ = value;
      onChanged();
      return this;
    }

    private Object dialPassword_ = "";
    /**
     * <pre>
     *拨号密码
     * </pre>
     *
     * <code>optional string dial_password = 3;</code>
     */
    public String getDialPassword() {
      Object ref = dialPassword_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        dialPassword_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     *拨号密码
     * </pre>
     *
     * <code>optional string dial_password = 3;</code>
     */
    public com.google.protobuf.ByteString
        getDialPasswordBytes() {
      Object ref = dialPassword_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        dialPassword_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *拨号密码
     * </pre>
     *
     * <code>optional string dial_password = 3;</code>
     */
    public Builder setDialPassword(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      dialPassword_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *拨号密码
     * </pre>
     *
     * <code>optional string dial_password = 3;</code>
     */
    public Builder clearDialPassword() {
      
      dialPassword_ = getDefaultInstance().getDialPassword();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *拨号密码
     * </pre>
     *
     * <code>optional string dial_password = 3;</code>
     */
    public Builder setDialPasswordBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      dialPassword_ = value;
      onChanged();
      return this;
    }

    private Object address_ = "";
    /**
     * <pre>
     *地址
     * </pre>
     *
     * <code>optional string address = 4;</code>
     */
    public String getAddress() {
      Object ref = address_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        address_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     *地址
     * </pre>
     *
     * <code>optional string address = 4;</code>
     */
    public com.google.protobuf.ByteString
        getAddressBytes() {
      Object ref = address_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        address_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *地址
     * </pre>
     *
     * <code>optional string address = 4;</code>
     */
    public Builder setAddress(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      address_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *地址
     * </pre>
     *
     * <code>optional string address = 4;</code>
     */
    public Builder clearAddress() {
      
      address_ = getDefaultInstance().getAddress();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *地址
     * </pre>
     *
     * <code>optional string address = 4;</code>
     */
    public Builder setAddressBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      address_ = value;
      onChanged();
      return this;
    }

    private int port_ ;
    /**
     * <pre>
     * </pre>
     *
     * <code>optional int32 port = 5;</code>
     */
    public int getPort() {
      return port_;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>optional int32 port = 5;</code>
     */
    public Builder setPort(int value) {
      
      port_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * </pre>
     *
     * <code>optional int32 port = 5;</code>
     */
    public Builder clearPort() {
      
      port_ = 0;
      onChanged();
      return this;
    }

    private Object terminalManufacturerId_ = "";
    /**
     * <pre>
     *车载终端制造商ID
     * </pre>
     *
     * <code>optional string terminal_manufacturer_id = 6;</code>
     */
    public String getTerminalManufacturerId() {
      Object ref = terminalManufacturerId_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        terminalManufacturerId_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     *车载终端制造商ID
     * </pre>
     *
     * <code>optional string terminal_manufacturer_id = 6;</code>
     */
    public com.google.protobuf.ByteString
        getTerminalManufacturerIdBytes() {
      Object ref = terminalManufacturerId_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        terminalManufacturerId_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *车载终端制造商ID
     * </pre>
     *
     * <code>optional string terminal_manufacturer_id = 6;</code>
     */
    public Builder setTerminalManufacturerId(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      terminalManufacturerId_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车载终端制造商ID
     * </pre>
     *
     * <code>optional string terminal_manufacturer_id = 6;</code>
     */
    public Builder clearTerminalManufacturerId() {
      
      terminalManufacturerId_ = getDefaultInstance().getTerminalManufacturerId();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *车载终端制造商ID
     * </pre>
     *
     * <code>optional string terminal_manufacturer_id = 6;</code>
     */
    public Builder setTerminalManufacturerIdBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      terminalManufacturerId_ = value;
      onChanged();
      return this;
    }

    private Object hardwareVersion_ = "";
    /**
     * <code>optional string hardware_version = 7;</code>
     */
    public String getHardwareVersion() {
      Object ref = hardwareVersion_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        hardwareVersion_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>optional string hardware_version = 7;</code>
     */
    public com.google.protobuf.ByteString
        getHardwareVersionBytes() {
      Object ref = hardwareVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        hardwareVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string hardware_version = 7;</code>
     */
    public Builder setHardwareVersion(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      hardwareVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string hardware_version = 7;</code>
     */
    public Builder clearHardwareVersion() {
      
      hardwareVersion_ = getDefaultInstance().getHardwareVersion();
      onChanged();
      return this;
    }
    /**
     * <code>optional string hardware_version = 7;</code>
     */
    public Builder setHardwareVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      hardwareVersion_ = value;
      onChanged();
      return this;
    }

    private Object firmwareVersion_ = "";
    /**
     * <pre>
     *固件版本
     * </pre>
     *
     * <code>optional string firmware_version = 8;</code>
     */
    public String getFirmwareVersion() {
      Object ref = firmwareVersion_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        firmwareVersion_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <pre>
     *固件版本
     * </pre>
     *
     * <code>optional string firmware_version = 8;</code>
     */
    public com.google.protobuf.ByteString
        getFirmwareVersionBytes() {
      Object ref = firmwareVersion_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        firmwareVersion_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <pre>
     *固件版本
     * </pre>
     *
     * <code>optional string firmware_version = 8;</code>
     */
    public Builder setFirmwareVersion(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      firmwareVersion_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *固件版本
     * </pre>
     *
     * <code>optional string firmware_version = 8;</code>
     */
    public Builder clearFirmwareVersion() {
      
      firmwareVersion_ = getDefaultInstance().getFirmwareVersion();
      onChanged();
      return this;
    }
    /**
     * <pre>
     *固件版本
     * </pre>
     *
     * <code>optional string firmware_version = 8;</code>
     */
    public Builder setFirmwareVersionBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      firmwareVersion_ = value;
      onChanged();
      return this;
    }

    private Object upgradeUrl_ = "";
    /**
     * <code>optional string upgrade_url = 9;</code>
     */
    public String getUpgradeUrl() {
      Object ref = upgradeUrl_;
      if (!(ref instanceof String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        String s = bs.toStringUtf8();
        upgradeUrl_ = s;
        return s;
      } else {
        return (String) ref;
      }
    }
    /**
     * <code>optional string upgrade_url = 9;</code>
     */
    public com.google.protobuf.ByteString
        getUpgradeUrlBytes() {
      Object ref = upgradeUrl_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (String) ref);
        upgradeUrl_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>optional string upgrade_url = 9;</code>
     */
    public Builder setUpgradeUrl(
        String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      upgradeUrl_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>optional string upgrade_url = 9;</code>
     */
    public Builder clearUpgradeUrl() {
      
      upgradeUrl_ = getDefaultInstance().getUpgradeUrl();
      onChanged();
      return this;
    }
    /**
     * <code>optional string upgrade_url = 9;</code>
     */
    public Builder setUpgradeUrlBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      upgradeUrl_ = value;
      onChanged();
      return this;
    }

    private int upgradeTimeLimit_ ;
    /**
     * <pre>
     *连接到升级服务器时限
     * </pre>
     *
     * <code>optional int32 upgrade_time_limit = 10;</code>
     */
    public int getUpgradeTimeLimit() {
      return upgradeTimeLimit_;
    }
    /**
     * <pre>
     *连接到升级服务器时限
     * </pre>
     *
     * <code>optional int32 upgrade_time_limit = 10;</code>
     */
    public Builder setUpgradeTimeLimit(int value) {
      
      upgradeTimeLimit_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     *连接到升级服务器时限
     * </pre>
     *
     * <code>optional int32 upgrade_time_limit = 10;</code>
     */
    public Builder clearUpgradeTimeLimit() {
      
      upgradeTimeLimit_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return this;
    }


    // @@protoc_insertion_point(builder_scope:RemoteUpgradeCommand)
  }

  // @@protoc_insertion_point(class_scope:RemoteUpgradeCommand)
  private static final RemoteUpgradeCommand DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new RemoteUpgradeCommand();
  }

  public static RemoteUpgradeCommand getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<RemoteUpgradeCommand>
      PARSER = new com.google.protobuf.AbstractParser<RemoteUpgradeCommand>() {
    public RemoteUpgradeCommand parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
        return new RemoteUpgradeCommand(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<RemoteUpgradeCommand> parser() {
    return PARSER;
  }

  @Override
  public com.google.protobuf.Parser<RemoteUpgradeCommand> getParserForType() {
    return PARSER;
  }

  public RemoteUpgradeCommand getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

