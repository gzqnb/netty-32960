// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: gbt3260.proto

package com.nevt.gbt32960.message;

public interface VehicleStateOrBuilder extends
    // @@protoc_insertion_point(interface_extends:VehicleState)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <code>optional .VehicleState.OperatingState operating_state = 1;</code>
   */
  int getOperatingStateValue();
  /**
   * <code>optional .VehicleState.OperatingState operating_state = 1;</code>
   */
  VehicleState.OperatingState getOperatingState();

  /**
   * <code>optional .VehicleState.ChargeState charging_State = 2;</code>
   */
  int getChargingStateValue();
  /**
   * <code>optional .VehicleState.ChargeState charging_State = 2;</code>
   */
  VehicleState.ChargeState getChargingState();

  /**
   * <code>optional .VehicleState.OperationMode operation_mode = 3;</code>
   */
  int getOperationModeValue();
  /**
   * <code>optional .VehicleState.OperationMode operation_mode = 3;</code>
   */
  VehicleState.OperationMode getOperationMode();

  /**
   * <code>optional float speed = 4;</code>
   */
  float getSpeed();

  /**
   * <code>optional double mileage = 5;</code>
   */
  double getMileage();

  /**
   * <code>optional float voltage = 6;</code>
   */
  float getVoltage();

  /**
   * <code>optional float current = 7;</code>
   */
  float getCurrent();

  /**
   * <code>optional int32 state_of_charge = 8;</code>
   */
  int getStateOfCharge();

  /**
   * <code>optional .VehicleState.DcInverterState dc_inverter_state = 9;</code>
   */
  int getDcInverterStateValue();
  /**
   * <code>optional .VehicleState.DcInverterState dc_inverter_state = 9;</code>
   */
  VehicleState.DcInverterState getDcInverterState();

  /**
   * <code>optional int32 gear_position = 10;</code>
   */
  int getGearPosition();

  /**
   * <code>optional int32 insulance = 11;</code>
   */
  int getInsulance();

  /**
   * <pre>
   *加速踏板行程
   * </pre>
   *
   * <code>optional int32 accelerator_travel = 12;</code>
   */
  int getAcceleratorTravel();

  /**
   * <pre>
   *刹车踏板行程
   * </pre>
   *
   * <code>optional int32 brake_travel = 13;</code>
   */
  int getBrakeTravel();
}
